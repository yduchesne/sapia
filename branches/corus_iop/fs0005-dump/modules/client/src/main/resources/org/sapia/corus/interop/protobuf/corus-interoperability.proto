package org.sapia.corus.interop.protobuf;

message Header {
    extensions 401 to 499;
    
    enum HeaderType {
        PROCESS = 1;
        SERVER  = 2;
    }
    
    required HeaderType type = 1;
}

message Process {
    extend Header {
        required Process header = 401;
    }
    
    required string request_id = 1;
    required string corus_pid  = 2;
}

message Server {
    extend Header {
        required Server header = 402;
    }
    
    required string request_id      = 1;
    required int32  processing_time = 2;
}



message Command {
    extensions 501 to 599;

    enum CommandType {
        POLL             = 1;
        STATUS           = 2;
        RESTART          = 3;
        CONFIRM_SHUTDOWN = 4;
        ACK              = 5;
        SHUTDOWN         = 6;
        DUMP             = 7;
        CONFIRM_DUMP     = 8;
    }
    
    required CommandType type = 1;
}

message Poll {
    extend Command {
        required Poll command = 501;
    }
    
    required string command_id = 1;
}

message Status {
    extend Command {
        required Status command = 502;
    }
    
    message Context {
        required string name   = 1;
        repeated Param  params = 2;
    }
    
    message Param {
        required string name  = 1;
        required string value = 2;
    }
    
    required string  command_id = 1;
    repeated Context contexts   = 2;
}

message Restart {
    extend Command {
        required Restart command = 503;
    }
    
    required string command_id = 1;
}

message ConfirmShutdown {
    extend Command {
        required ConfirmShutdown command = 504;
    }
    
    required string command_id = 1;
}

message Ack {
    extend Command {
        required Ack command = 505;
    }
    
    required string command_id = 1;
}

message Shutdown {
    extend Command {
        required Shutdown command = 506;
    }
    
    enum RequestorActor {
        SERVER  = 1;
        PROCESS = 2;
        ADMIN   = 3;
    }
    
    required string         command_id = 1;
    required RequestorActor requestor  = 2;
}

message Dump {
    extend Command {
        required Dump command = 507;
    }
    
    enum DumpType {
        THREAD = 1;
        HEAP   = 2;
    }
    
    required string   command_id  = 1;
    required DumpType type        = 2;
    required string   output_file = 3;
}

message ConfirmDump {
    extend Command {
        required ConfirmDump command = 508;
    }

    required string command_id = 1;
}



message Message {

    // The required header of this message
    required Header  header   = 1;
    
    // The commands that are part of this message
    repeated Command commands = 2;

    // When reporting an error, contains the error code    
    optional string error_code            = 3;

    // When reporting an error, contains the error message    
    optional string error_message         = 4;

    // When reporting an error, contains the error details    
    optional string error_detail          = 5;
} 
