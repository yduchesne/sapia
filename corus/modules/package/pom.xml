<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <name>Sapia Corus Server Package</name>
  <description>The Corus server package module</description>
  <url>http://www.sapia-oss.org/projects/corus/index.html</url>
  <groupId>org.sapia</groupId>
  <artifactId>sapia_corus_server_package</artifactId>

  <parent>
    <groupId>org.sapia</groupId>
    <artifactId>sapia_corus_parent</artifactId>
        <version>4.1.2-SNAPSHOT</version>
    <relativePath>../..</relativePath>
  </parent>

  <packaging>jar</packaging>

  <licenses>
    <license>
      <name>GNU General Public License (GPL), version 3</name>
      <url>http://www.gnu.org/licenses/gpl-3.0.txt</url>
    </license>
  </licenses>
  
  <dependencies>

    <dependency>
      <groupId>org.sapia</groupId>
      <artifactId>sapia_corus_server</artifactId>
      <classifier>server</classifier>
    </dependency>

    <dependency>
      <groupId>org.sapia</groupId>
      <artifactId>sapia_corus_server</artifactId>
      <classifier>starter</classifier>
    </dependency>    

  </dependencies>

  <build>
    <finalName>${artifactId}-${version}</finalName>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/lib</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>${basedir}/etc/demoApp/lib</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>

          <!-- building demo jar -->
          <execution>
            <id>demo-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classifier>demo</classifier>
              <finalName>sapia_corus</finalName>
              <outputDirectory>${basedir}/etc/demoApp/lib</outputDirectory>
              <includes>
                <include>**/examples/**/*</include>
              </includes>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>

          <!-- copying server dependencies -->
          <execution>
            <id>copy-server-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/lib/server</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <excludeArtifactIds>sapia_magnet</excludeArtifactIds>
            </configuration>
          </execution>

          <!-- copying VM bootstrap dependencies -->
          <execution>
            <id>copy-vm-bootstrap</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/lib/vm-boot</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeArtifactIds>sapia_as,sapia_corus_iop_api</includeArtifactIds>
            </configuration>
          </execution>

          <!-- copying 3rd-party dependencies -->
          <execution>
            <id>copy-thirdparty</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/lib/thirdparty</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeArtifactIds>sapia_corus_tomcat</includeArtifactIds>
            </configuration>
          </execution>
          
          <!-- copying Java starter dependencies -->
          <execution>
            <id>copy-java-starter-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/lib/java</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeArtifactIds>jdom,sapia_utils,sapia_corus_iop</includeArtifactIds>
            </configuration>
          </execution>          

          <!-- copying Magnet dependencies -->
          <execution>
            <id>copy-magnet-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/lib/magnet</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeArtifactIds>sapia_magnet,ant,bsh,jdom,log4j,piccolo,sapia_console,sapia_utils,sapia_corus_iop</includeArtifactIds>
            </configuration>
          </execution>

          <!-- copying Demo dependencies -->
          <execution>
            <id>copy-demo-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/etc/demoApp/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeArtifactIds>jdom,sapia_utils,sapia_corus_iop,simple,sapia_ubik</includeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <execution>
            <id>make-server-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/server.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>make-server-linux32-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/server-linux32.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>make-server-linux64-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/server-linux64.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>make-server-osx32-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/server-osx32.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>make-server-osx64-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/server-osx64.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>make-server-solarisx86-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/server-solaris32-x86.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>make-server-solarissparc-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/server-solaris32-sparc.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>make-server-windows32-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/main/assembly/server-windows32.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>make-demo-dist</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <includeBaseDirectory>false</includeBaseDirectory>
              <descriptors>
                <descriptor>src/main/assembly/demo.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>

        </executions>
      </plugin>
      
      <!-- skipping deployment to repo of packages generated by this module -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.7</version>
        <configuration>
            <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <!--profiles>
    <profile>
      <id>google-code-upload</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.googlecode.maven-gcu-plugin</groupId>
            <artifactId>maven-gcu-plugin</artifactId>
            <version>1.1</version>
            <executions>
              <execution>
                <id>default-cli</id>
                <phase>package</phase>
                <goals>
                  <goal>upload</goal>
                </goals>
                <configuration>
                  <serverId>sapia.googlecode.com</serverId>
                  <failsOnError>true</failsOnError>
                  <projectName>sapia</projectName>
                  <uploads>
                    <upload>
                      <file>${project.build.directory}/sapia_corus_server-${project.version}-bin.zip</file>
                      <summary>Corus ${project.version} (generic zip)</summary>
                      <labels>
                        <label>Featured</label>
                        <label>Type-Archive</label>
                      </labels>
                    </upload>
                    <upload>
                      <file>${project.build.directory}/sapia_corus_server-${project.version}-linux32.tar.gz</file>
                      <summary>Corus ${project.version} (linux 32bits)</summary>
                      <labels>
                        <label>Featured</label>
                        <label>Type-Archive</label>
                      </labels>
                    </upload>
                    <upload>
                      <file>${project.build.directory}/sapia_corus_server-${project.version}-linux64.tar.gz</file>
                      <summary>Corus ${project.version} (linux 64bits)</summary>
                      <labels>
                        <label>Featured</label>
                        <label>Type-Archive</label>
                      </labels>
                    </upload>
                    <upload>
                      <file>${project.build.directory}/sapia_corus_server-${project.version}-osx32.tar.gz</file>
                      <summary>Corus ${project.version} (OSX 32bits)</summary>
                      <labels>
                        <label>Featured</label>
                        <label>Type-Archive</label>
                      </labels>
                    </upload>
                    <upload>
                      <file>${project.build.directory}/sapia_corus_server-${project.version}-osx64.tar.gz</file>
                      <summary>Corus ${project.version} (OSX 64bits)</summary>
                      <labels>
                        <label>Featured</label>
                        <label>Type-Archive</label>
                      </labels>
                    </upload>
                    <upload>
                      <file>${project.build.directory}/sapia_corus_server-${project.version}-solaris32-x86.tar.gz</file>
                      <summary>Corus ${project.version} (Solaris 32bits x86)</summary>
                      <labels>
                        <label>Featured</label>
                        <label>Type-Archive</label>
                      </labels>
                    </upload>
                    <upload>
                      <file>${project.build.directory}/sapia_corus_server-${project.version}-solaris32-sparc.tar.gz</file>
                      <summary>Corus ${project.version} (Solaris Sparc)</summary>
                      <labels>
                        <label>Featured</label>
                        <label>Type-Archive</label>
                      </labels>
                    </upload>
                    <upload>
                      <file>${project.build.directory}/sapia_corus_server-${project.version}-win32.zip</file>
                      <summary>Corus ${project.version} (Windows 32bits)</summary>
                      <labels>
                        <label>Featured</label>
                        <label>Type-Archive</label>
                      </labels>
                    </upload>
                  </uploads>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles-->
</project>
