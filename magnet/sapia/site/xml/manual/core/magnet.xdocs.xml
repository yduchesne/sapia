<sapia:page title="core:magnet" xmlns:sapia="http://www.sapia-oss.org/2003/XSL/Transform" cssPath="../../css/sapia.css">
  <sapia:sect1 title="magnet">
    <sapia:section>
      <sapia:path name="home" href="../../../../home.html" />
      <sapia:path name="projects" />
      <sapia:path name="magnet" href="../../home.html" />
      <sapia:path name="manual" href="../home.html#Core%20Elements" />
      <sapia:path name="core" />      
      <sapia:path name="magnet" />
    </sapia:section>
    <toc />
        
    <sapia:sect2 title="Overview">
			<p>The <sapia:command>&lt;magnet&gt;</sapia:command> element is the root element of a
			Magnet configuration file. We can set a name to the magnet file and we can associate a
			brief description. Note however that these two attributes are not used by Magnet ; they
			only provide some sort of documentation information to the programmers.
			</p>
	
	    <p>One interesting feature of the <sapia:command>magnet</sapia:command> element is the extension mechanism that allows
	    a given Magnet configuration file to extend another Magnet configuration - somewhat like inheritance.
	    A Magnet can only extend a single parent at a time. In such a scenario, the child Magnets
	    can access all the parameters and values defined by the parent Magnet and all the Launchers
	    (of the inheritance tree) are executed, starting by the root Magnet.
	    </p>
    </sapia:sect2>

    <sapia:sect2 title="Attributes">
      <p>The following list the xml attributes of the Magnet element:
      </p>
      <sapia:table>
        <sapia:th>Name</sapia:th>
        <sapia:th>Description</sapia:th>
        <sapia:th>Required</sapia:th>
        <sapia:th>Interpolation</sapia:th>
        <tr>
          <td>name</td>
          <td>The unique name of this Magnet configuration file. The system does not require
          the name to be unique but as a rule, it keeps things simpler if we do that.</td>
          <td>no</td>
          <td>yes</td>
        </tr>
        <tr>
          <td>description</td>
          <td>The description of this Magnet configuration file ; purpose, what it does, usage, ...</td>
          <td>no</td>
          <td>no</td>
        </tr>
        <tr>
          <td>extend</td>
          <td><p>The name of the resource that this magnet configuration file extends. The name of
          the resource can be an absolute file name or a file relative to the directory defined
          by the Java <sapia:command>user.dir</sapia:command> system property. The resource
          can also be a URL of corresponding to the <sapia:command>file</sapia:command> or
          <sapia:command>http</sapia:command> protocol schemes.</p></td>
          <td>no</td>
          <td>no</td>
        </tr>
      </sapia:table>
    </sapia:sect2>

    <sapia:sect2 title="Child Elements">
      <p>The following list the possible child xml elements that can hold the <sapia:command>magnet</sapia:command> element:
      </p>
      <sapia:table>
        <sapia:th>Name</sapia:th>
        <sapia:th>Cardinality</sapia:th>
        <sapia:th>Description</sapia:th>
        <tr>
          <td><a href="protocolHandlerDef.html" target="main">protocolHandlerDef</a></td>
          <td>0 or *</td>
          <td>Extension point to plug in your own protocols to resolve and load resources.
          By default Magnet handles the <sapia:command>file</sapia:command> and <sapia:command>http</sapia:command>
          schemes - corresponding to the file system and HTTP protocols.</td>
        </tr>
        <tr>
          <td><a href="scriptHandlerDef.html" target="main">scriptHandlerDef</a></td>
          <td>0 or *</td>
          <td>Extension point to plug in your own scripting engine. Magnet comes with
          <a href="http://www.beanshell.org/" target="external">Beanshell</a> integration built-in.</td>
        </tr>
        <tr>
          <td><a href="launcherHandlerDef.html" target="main">launchHandlerDef</a></td>
          <td>0 or *</td>
          <td>Extension point to plug in your own class that launches applications. Magnet
          offers a <sapia:command>java</sapia:command> and a <sapia:command>system</sapia:command>
          launcher (to start Java and native processes, respectively).</td>
        </tr>
        <tr>
          <td><a href="script.html" target="main">script</a></td>
          <td>0 or *</td>
          <td>A Magnet configuration can contain various script elements to perform intialization tasks. At runtime
          Magnet will render and execute the script that matches the execution profile. If no script is
          provided for the profile and a script exists for the default one, it will be executed. Only one
          script by profile can exist within a Magnet configuration.</td>
        </tr>
        <tr>
          <td><a href="parameters.html" target="main">parameters</a></td>
          <td>0 or *</td>
          <td>To define global parameters within the Magnet. Parameters can be specified for a given
          profile or for all profiles (called the default profile).</td>
        </tr>
        <tr>
          <td><a href="others.html" target="main">others</a></td>
          <td>0 or *</td>
          <td>TO BE COMPLETED....</td>
        </tr>
      </sapia:table>
    </sapia:sect2>

    <sapia:sect2 title="Rendering Operations">
      <p>When a <sapia:command>&lt;magnet&gt;</sapia:command> element is rendered, it performs the following
      operations in order:
        <ol>
          <li>Renders the parameters of the <i>default</i> profile.</li>
          <li>Renders the parameters of the profile specified when invoking the <sapia:command>magnet</sapia:command> command.</li>
          <li>Resolves the name attribute (with variable interpolation).</li>
          <li>Renders the handler definitions, if any.</li>
          <li>Renders the script of the specified profile. If none is found it renders the
          script for the <i>default</i> profile - if any.</li>
          <li>Renders all the other generic objects of the object graph.</li>
          <li>Renders all the launchers.</li>
        </ol>
      </p>
    </sapia:sect2>

    <sapia:sect2 title="Examples">
      <p>This first example is a very basic Magnet configuration with a name and
      a description.</p>
<sapia:code><![CDATA[
<magnet xmlns:magnet="http://schemas.sapia-oss.org/magnet/"
        name="MagnetExample1"
        description="This is a simple example.">
...
</magnet>]]></sapia:code>

      <p>The following example shows a Magnet configuration that extends another
      Magnet configuration file called <sapia:command>C:\magnet\main.xml</sapia:command>
      </p>
<sapia:code><![CDATA[
<magnet xmlns:magnet="http://schemas.sapia-oss.org/magnet/"
        name="MagnetExample2"
        description="This is an extend example."
        extend="C:\magnet\main.xml">
...
</magnet>]]></sapia:code>

      <p>The third example shows a Magnet configuration that extends a
      resource called <sapia:command>http://www.mycorp.com/magnet/main.xml</sapia:command>
      </p>
<sapia:code><![CDATA[
<magnet xmlns:magnet="http://schemas.sapia-oss.org/magnet/"
        name="MagnetExample3"
        description="This is another extens example."
        extends="http://www.mycorp.com/magnet/main.xml">
...
</magnet>]]></sapia:code>
    </sapia:sect2>
  </sapia:sect1>
</sapia:page>