<sapia:page title="core:launcherHandlerDef" xmlns:sapia="http://www.sapia-oss.org/2003/XSL/Transform" cssPath="../../css/sapia.css">
  <sapia:sect1 title="core:launcherHandlerDef">
    <sapia:section>
      <sapia:path name="home" href="../../../../home.html" />
      <sapia:path name="projects" />
      <sapia:path name="magnet" href="../../home.html" />
      <sapia:path name="manual" href="../home.html#Core%20Elements" />
      <sapia:path name="core" />
      <sapia:path name="launcherHandlerDef" />
    </sapia:section>
    <toc />
        
    <sapia:sect2 title="Overview">
	    <p>The <sapia:command>&lt;launchHandlerDef&gt;</sapia:command> element can be used to
	    extend the functionality of Magnet by adding a new launcher to start a different type
        of process. For example, if you want to support starting a Python
        program from Magnet you would first need to implement the
        <a href="./../../project-info/apidocs/org/sapia/magnet/domain/LaunchHandlerIF.html"><sapia:class>LaunchHandlerIF</sapia:class></a>
        interface. Your class would manage the Python runtime within the contract of that interface.
        Once this class is coded you need to tell Magnet how to associate the new Python launcher
        to the class you just wrote. To perform the association between the launcher and the class
        you create a launcher handler definition.
	    </p>
    </sapia:sect2>

    <sapia:sect2 title="Attributes">
      <p>The following list the xml attributes of the <sapia:command>&lt;launchHandlerDef&gt;</sapia:command> element:
      </p>
      <sapia:table>
        <sapia:th>Name</sapia:th>
        <sapia:th>Description</sapia:th>
        <sapia:th>Required</sapia:th>
        <sapia:th>Interpolation</sapia:th>
        <tr>
          <td>type</td>
          <td>Defines the type of launcher for which we provide a handler.</td>
          <td>yes</td>
          <td>yes</td>
        </tr>
        <tr>
          <td>classname</td>
          <td>The name of the class that implements the <sapia:class>LaucnherHandlerIF</sapia:class> interface.</td>
          <td>yes</td>
          <td>yes</td>
        </tr>
      </sapia:table>
    </sapia:sect2>

    <sapia:sect2 title="Rendering Operations">
      <p>When a <sapia:command>&lt;launchHandlerDef&gt;</sapia:command> element is rendered, it performs the following
      operations in order:
        <ol>
          <li>Resolves the <sapia:command>type</sapia:command> and <sapia:command>classname</sapia:command> attributes (using variable interpolation).</li>
          <li>Registers the launcher handler with Magnet's internals.</li>
        </ol>
      </p>
    </sapia:sect2>

    <sapia:sect2 title="Examples">
      <p>This example creates a new launcher handler to start python programs. The association defines
      that the class <sapia:class>com.mycorp.magnet.PythonLauncher</sapia:class> will be used
      everytime the "python" launcher type is used.
      </p>
      <sapia:code><![CDATA[
<magnet xmlns:core="http://schemas.sapia-oss.org/magnet/core/"
        name="LauncherHandlerDefExample1"
        description="This is a first example.">
...
    <launcherHandlerDef type="python" classname="com.mycorp.magnet.PythonLauncher" />
...
</magnet>]]></sapia:code>
    </sapia:sect2>
    
  </sapia:sect1>
</sapia:page>
