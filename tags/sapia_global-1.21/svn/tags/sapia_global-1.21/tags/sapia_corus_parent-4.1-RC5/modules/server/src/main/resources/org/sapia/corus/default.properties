##### Temp dir ############################
#
# Directory where distributions are
# uploaded.
#

corus.server.tmp.dir=${corus.home}/tmp

##### Deploy dir ##########################
#
# Directory where distributions are
# extracted, and where processes are
# executed. 
#

corus.server.deploy.dir=${corus.home}/deploy

##### Repo dir ##########################
#
# Directory where zipped distributions are
# kept.
#

corus.server.repo.dir=${corus.home}/files/repo

##### Upload dir ##########################
#
# Directory where arbitrary artifacts are
# uploaded.
#

corus.server.uploads.dir=${corus.home}/files/uploads

##### Script dir ##########################
#
# Directory where native shell scripts sare
# uploaded.
#

corus.server.scripts.dir=${corus.home}/files/scripts

##### DB dir ##############################
#
# Used to keep information kept by
# Corus server instances between
# process restarts. 
#

corus.server.db.dir=${corus.home}/db

##### Process auto-restart  ###############
#
# If true, process auto-restart by Corus
# will be enabled. Otherwise, it will be 
# disabled (defaults to true). 
#

corus.process.auto-restart=true

##### Process timeout #####################
#
# Delay after which processes that 
# have not polled their Corus server 
# are considered "timed out".
#
# Delay is in seconds.
#

corus.process.timeout=25

##### Process check interval ##############
#
# Interval at which the Corus server 
# checks for timed out processes.
#
# Interval is in seconds.
#

corus.process.check-interval=15

##### Process auto-restart  ###############
#
# If true, process auto-restart by Corus
# will be enabled. Otherwise, it will be 
# disabled (defaults to true). 
#
corus.process.auto-restart=true

##### Process kill interval ###############
#
# Interval at which the Corus server
# checks for timed out processes.
#
# Interval is in seconds.
#

corus.process.kill-interval=15

##### Process start interval ############
#
# Amount of time to wait for between
# process startups
#
# Interval is in seconds.
#

corus.process.start-interval=15

##### Process restart interval ############
#
# Amount of time a process must have 
# been running for before it crashed 
# and in order for an automatic restart 
# to be authorized.
#
# Interval is in seconds.
#

corus.process.restart-interval=120

##### Process boot startup ################
#
# Indicates if a processes should be started
# automatically at Corus server boot time 
# (provided these processes have an execution
# configuration that is flagged as startable
# on boot).
#
# The functionality is enabled by default.
# If the Corus node is configured as a repo, it
# is recommended to disable this flag. 
#
corus.process.start-at-boot.enabled=true

##### Host filtering ######################
#
# Used to authorize given hosts to connect
# to the Corus server. Must be given as
# comma-delimited list of host patterns. If
# ommitted, any host can connect to the 
# server.
#
# Specified allow hosts are given access
# and deny hosts are forbidden. By default
# no filtering is applied and all requests
# are accepted. The reserved word 'localhost'
# can be used to specify the current host.
#

corus.server.security.hostPattern.allow=
corus.server.security.hostPattern.deny=

##### Alerts ###############################
#
# Used to determine the SMTP configuration for
# sending alerts, as well as the recipients
corus.server.alert.enabled=false
corus.server.alert.smtp.host=
corus.server.alert.smtp.port=
corus.server.alert.smtp.password=
corus.server.alert.recipients=
corus.server.alert.sender=corus-no-reply@localhost

##### Repository ###########################
#
# Determines what the type of repository node that
# this Corus instance will be. Can be one of the 
# following (defaults to none):
#
# - none: means that this Corus node will be neither 
#         a repository client, nor a repository server.
#         (i.e.: it will not be involved in repository
#         operations at all). This in fact disables any 
#         repository functionality.
#
# - client: means that this Corus node will act as a
#         repository client.
# 
# - server: means that this Corus node will act as a
#         repository server. 
corus.server.repository.node.type=none
#
# Specifies the maximum number of concurrent deployment 
# requests that a repository should process (any more are queued
# up - defaults to 5).
#
corus.server.repository.max.concurrent-deployments=5
#
# The number of times a client repo node should try to discover
# potential server repos at startup and pull their distributions
# (defaults to 4).
# 
corus.server.repository.dist.disco.max-attempts=4
#
# The time interval (in seconds) to wait for in between 
# repo server discovery attempts (3 seconds by default).
#
corus.server.repository.dist.disco.interval=3
#
# Enables (true) or disables (false) the push of tags by
# this Corus instance if it is configured as a repo server
# (defaults to true).
#
# Enables (true) or disables (false) the push of tags by
# this Corus instance if it is configured as a repo server
# (defaults to true).
#
corus.server.repository.tags.push.enabled=true
#
# Enables (true) or disables (false) the pull of tags by
# this Corus instance if it is configured as a repo client
# (defaults to true).
#
corus.server.repository.tags.pull.enabled=true
#
# Enables (true) or disables (false) the push of properties by
# this Corus instance if it is configured as a repo server
# (defaults to true).
#
corus.server.repository.properties.push.enabled=true
#
# Enables (true) or disables (false) the pull of properties by
# this Corus instance if it is configured as a repo client
# (defaults to true).
#
corus.server.repository.properties.pull.enabled=true
#
# Enables (true) or disables (false) the push of file uploads by
# this Corus instance if it is configured as a repo server
# (defaults to true).
#
corus.server.repository.uploads.push.enabled=true
#
# Enables (true) or disables (false) the pull of file uploads by
# this Corus instance if it is configured as a repo client
# (defaults to true).
#
corus.server.repository.uploads.pull.enabled=true
#
# Enables (true) or disables (false) the push of shell scripts by
# this Corus instance if it is configured as a repo server
# (defaults to true).
#
corus.server.repository.scripts.push.enabled=true
#
# Enables (true) or disables (false) the pull of shell scripts by
# this Corus instance if it is configured as a repo client
# (defaults to true).
#
corus.server.repository.scripts.pull.enabled=true
#
# Enables (true) or disables (false) the push of port ranges by
# this Corus instance if it is configured as a repo server
# (defaults to true).
#
corus.server.repository.port-ranges.push.enabled=true
#
# Enables (true) or disables (false) the pull of port ranges by
# this Corus instance if it is configured as a repo client
# (defaults to true).
#
corus.server.repository.port-ranges.pull.enabled=true

