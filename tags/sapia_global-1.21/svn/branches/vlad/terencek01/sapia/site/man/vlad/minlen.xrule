<descriptor namespace="vlad" 
            name="minLen"
            class="org.sapia.validator.rules.MinLen"
            nested="yes"
            >

  <description>
    Use this rule to ensure that a string is of a given
    minimal length (greater or equal than a given length). 
  </description>
  <attributes>
    <attribute name="attribute" mandatory="no">
      <description>Specifies the name of the accessor whose return value's string representation
      will be validated. The rule ensures that string's length is greater or equal than the length 
      specified by the "len" attribute - see next.
      <p>If the object to validate is a null reference, an error is generated.</p>      
      <p>If this attribute is omitted, the current object on the validation context's
      stack will be validated.</p>
      This attribute's value must use the property access notation specified by the
      <a href="http://jakarta.apache.org/commons/beanutils.html">BeanUtils</a> libary - see 
      the library's <a href="http://jakarta.apache.org/commons/beanutils/api/org/apache/commons/beanutils/package-summary.html">
      javadoc</a> for more information.
      </description>
    </attribute>
    <attribute name="len" mandatory="yes">
      <description>An integer value corresponding to the minimal length expected from the
      validated string.</description>
    </attribute>    
  </attributes>
  
  <examples>
    <example name="Enforcing the minimal length of employee codes">
      <content><![CDATA[
<vlad xmlns:vlad="http://www.sapia-oss.org/vlad/rules">

  <ruleSet id="checkEmployee">
    
    <vlad:minLen attribute="employeeCode" len="5">
       <message 
        value="Employee code must have at least 5 chars."/>
    </vlad:minLen>
    
  </ruleSet>
</vlad>]]>      
      </content>
    </example>
  </examples>

</descriptor>