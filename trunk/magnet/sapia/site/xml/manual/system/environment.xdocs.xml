<sapia:page title="system:environment" xmlns:sapia="http://www.sapia-oss.org/2003/XSL/Transform" cssPath="../../css/sapia.css">
  <sapia:sect1 title="environment">
    <sapia:section>
      <sapia:path name="home" href="../../../../home.html" />
      <sapia:path name="projects" />
      <sapia:path name="magnet" href="../../home.html" />
      <sapia:path name="reference" href="../home.html#System%20Element" />
      <sapia:path name="system" />      
      <sapia:path name="environment" />
    </sapia:section>
    
    <toc />
        
    <sapia:sect2 title="Overview">
	  <p>The <sapia:command>&lt;environment&gt;</sapia:command> element defines a group
      of variables that is passed to the system launcher as environment variables. By itself
      this element does not define any variable but rather contains a list of
      <sapia:command>&lt;variable&gt;</sapia:command> elements. The main functionality of
      this element is to group variables logically.
	  </p>
      
      <p>Each <sapia:command>environment</sapia:command> element can be assigned an identifier
      (through an <sapia:command>id</sapia:command> attribute). This ID is useful when creating different
      groups of environment variables to: 1) identify each environment element; and 2) to link 
      environment elements together in a parent-child relationship (somewhat like inheritance). Under
      this scenario, the child environment can override variables that are defined in the parent
      environment.
      </p>
      
      <p>The <sapia:command>&lt;environment&gt;</sapia:command> element can be defined in two different
      places in a Magnet configuration: under the root <sapia:command>&lt;magnet&gt;</sapia:command> element or
      within <sapia:command>&lt;profile&gt;</sapia:command> elements of a <b>system launcher</b>.
      In the first case, the environment variables mainly allow one to categorize or to define
      global sets of variables. In the second case, the environment variables are used by the
      system launcher when its specified profile is executed.
      </p>
    </sapia:sect2>
        
    <sapia:sect2 title="Attributes">
      <p>The following lists the xml attributes of the environment element:
      </p>
	  <sapia:table>
	    <sapia:th>Name</sapia:th>
	    <sapia:th>Description</sapia:th>
	    <sapia:th>Required</sapia:th>
	    <sapia:th>Interpolation</sapia:th>
	    <tr>
	      <td>id</td>
	      <td>An identifier for this environment variable definition.</td>
	      <td>no</td>
	      <td>yes</td>
	    </tr>
	    <tr>
	      <td>parent</td>
	      <td>The identifier of this environment's parent.</td>
	      <td>no</td>
	      <td>yes</td>
	    </tr>
	  </sapia:table>
    </sapia:sect2>
    
    <sapia:sect2 title="Child Elements">
      <p>The following lists the possible child xml elements that can hold the <sapia:command>environment</sapia:command> element:
      </p>
      <sapia:table>
        <sapia:th>Name</sapia:th>
        <sapia:th>Cardinality</sapia:th>
        <sapia:th>Description</sapia:th>
        <tr>
          <td><a href="#Variable" target="main">variable</a></td>
          <td>1 or *</td>
          <td>Specifies a variable in the environment definition.</td>
        </tr>
      </sapia:table>
    </sapia:sect2>

    <sapia:sect2 title="Rendering Operations">
      <p>When an <sapia:command>&lt;environment&gt;</sapia:command> element is rendered, it performs
      the following operations in order:
	    <ol>
          <li>Resolves the <sapia:command>id</sapia:command> and the <sapia:command>parent</sapia:command> attributes (using variable interpolation).</li>
          <li>Renders all the <sapia:command>&lt;variable&gt;</sapia:command> child elements.</li>
        </ol>
      </p>
    </sapia:sect2>
    
    <sapia:sect2 title="Nested Element Definitions">
      <sapia:sect3 title="Variable">
        <p>The <sapia:command>&lt;variable&gt;</sapia:command> element defines a name-value pair that
        corresponds to an environment variable.
        </p>

        <sapia:sect4 title="Attributes">
          <sapia:table>
            <sapia:th>Name</sapia:th>
            <sapia:th>Description</sapia:th>
            <sapia:th>Required</sapia:th>
            <sapia:th>Interpolation</sapia:th>
            <tr>
              <td>name</td>
              <td>The name of this variable.</td>
              <td>yes</td>
              <td>no</td>
            </tr>
            <tr>
              <td>value</td>
              <td>The value of this variable.</td>
              <td>yes</td>
              <td>no</td>
            </tr>
          </sapia:table>
        </sapia:sect4>

        <sapia:sect4 title="Rendering Operations">
          <p>When a <sapia:command>&lt;variable&gt;</sapia:command> element is rendered, it performs the following
          operations in order:
            <ol>
              <li>Resolves the name and value attributes (using variable interpolation).</li>
            </ol>
          </p>
        </sapia:sect4>
      </sapia:sect3>
    </sapia:sect2>

    <sapia:sect2 title="Examples">
      <p>This example shows how to define to some simple environment variables. Once the system application
      is started you would be able to access them using $USER_NAME or %USER_NAME% notation based on your
      operating system.
      </p>
      <sapia:code><![CDATA[
<magnet xmlns:magnet="http://schemas.sapia-oss.org/magnet/"
        name="EnvironmentExample1"
        description="This is a first environment example.">
...
    <environment id="base">
        <variable name="USER_NAME" value="${user.name}" />
        <variable name="USER_DIR"  value="${user.dir}" />
    </environment>
...
</magnet>]]></sapia:code>
    </sapia:sect2>
    
  </sapia:sect1>
</sapia:page>
