<?xml version="1.0" encoding="UTF-8"?><sapia:page cssPath="../../css/sapia.css" title="vlad:ifDefined" xmlns:sapia="http://www.sapia-oss.org/2003/XSL/Transform"><sapia:vmenu><sapia:vsection name="Project Home" href="../../home.html"/><sapia:vsection name="Javadoc" href="../../maven/api/index.html"/><sapia:vsection name="Download" href="../../download.html"/><sapia:vsection name="Mailing List" href="../../list.html"/><sapia:vsection name="Maven" href="../../maven/index.html"/></sapia:vmenu><sapia:sect1 title="vlad:ifDefined"><sapia:section><sapia:path name="home" href="../../../../home.html"/><sapia:path name="projects" href="../../../../projects.html"/><sapia:path name="vlad" href="../../index.html"/><sapia:path name="rule reference" href="../index.html"/><sapia:path name="vlad:ifDefined"/></sapia:section><sapia:sect-desc><sapia:sect-desc><p>
    <p>
    This rule is meant to encapsulate another rule, and delegates validation to the latter provided
    one of the following condition is met:
      <ul>
          <li>If an accesssor is specified, it is invoked on the object that this instance receives
          as part of a validation context; if the return value of the accessor is null, then the
          encapsulated rule is not called - otherwise it is.</li>
          <li>If no accessor is specified, the above test is made on the current object in the
          validation context's stack. If the current object is not null, the encapsulated rule
          is called.</li>
      </ul>
    </p>
    <p>
    Use this rule to check that a given non-mandatory value exists before proceeding with a given
    validation flow - thus avoiding NullPointerExceptions.</p>
    <p>
    Note that the ifDefined rule takes a <b>single nested rule only</b>.
    </p>
  </p></sapia:sect-desc></sapia:sect-desc><sapia:sect2 title="Attributes"><sapia:table width="100%"><sapia:th>Name</sapia:th><sapia:th>Description</sapia:th><sapia:th>Mandatory</sapia:th><tr><td width="20%" align="center" valign="top">attribute</td><td width="75%" valign="top"><sapia:sect-desc><p>Specifies the name of the accessor whose return value is tested. If the return
      value is null, then the encapsulated rule is not called.
      <p>If this attribute is not specified, the current object on the validation context's stack
      is tested - see above for more details.</p>
      <p>
      This attribute's value must use the property access notation specified by the
      <a href="http://jakarta.apache.org/commons/beanutils.html">BeanUtils</a> libary - see 
      the library's <a href="http://jakarta.apache.org/commons/beanutils/api/org/apache/commons/beanutils/package-summary.html">
      javadoc</a> for more information.</p>
      </p></sapia:sect-desc></td><td width="5%" align="center" valign="top">no</td></tr></sapia:table></sapia:sect2><sapia:sect2 title="Example(s)"><sapia:sect3 title="Using ifDefined to branch into a given validation flow"><sapia:sect-desc><p>The <b>optional</b> address of a all employees of a company is checked for a mandatory zip code.</p></sapia:sect-desc><sapia:code><content>
&lt;vlad xmlns:vlad="http://www.sapia-oss.org/vlad/rules"&gt;

  &lt;ruleSet id="checkCompany"&gt;
    
    &lt;vlad:forEach attribute="employees"&gt;
      &lt;ruleSet id="checkEmployee"&gt;
        &lt;vlad:ifDefined attribute="address"&gt;      
          &lt;vlad:mandatory 
                attribute="address.zipCode" 
                id="zipCode"&gt;
            &lt;message 
             value="Zip code must be provided"/&gt;
          &lt;/vlad:mandatory&gt;
        &lt;/vlad:ifDefined&gt;
      &lt;/ruleSet&gt;
    &lt;/vlad:forEach&gt;      
        
  &lt;/ruleSet&gt;
&lt;/vlad&gt;      
      </content></sapia:code></sapia:sect3></sapia:sect2></sapia:sect1></sapia:page>