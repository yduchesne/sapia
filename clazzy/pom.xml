<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <name>Clazzy</name>
  <description>Classloader framework</description>
  <url>http://www.sapia-oss.org/projects/clazzy/index.html</url>

  <groupId>org.sapia</groupId>
  <artifactId>sapia_clazzy</artifactId>
  <version>2.1-SNAPSHOT</version>

  <parent>
    <groupId>org.sapia</groupId>
    <artifactId>sapia_global</artifactId>
    <version>1.3</version>
  </parent>

  <scm>
    <connection>scm:svn:http://sapia.googlecode.com/svn/trunk/clazzy</connection>
    <developerConnection>scm:svn:https://sapia.googlecode.com/svn/trunk/clazzy</developerConnection>
    <url>scm:svn:https://sapia.googlecode.com/svn/trunk/clazzy</url>
  </scm>

  <licenses>
    <license>
      <name>Apache 2</name>
        <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
     </license>
  </licenses>

  <packaging>jar</packaging>
  
  <build>
    <directory>target</directory>
    <outputDirectory>target/classes</outputDirectory>
    <finalName>${artifactId}-${version}</finalName>
    <testOutputDirectory>target/test-classes</testOutputDirectory>

   <plugins>
   
     <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>sun.jdk</groupId>
                <artifactId>tools</artifactId>
                <version>1.5.0</version>
                <scope>system</scope>
                <systemPath>${java.home}/../lib/tools.jar</systemPath>
              </dependency>
            </dependencies>
            <executions>
              <execution>
     
                <phase>process-test-classes</phase>
                <configuration>                                       
                  <tasks>
                    <echo message="Compiling alternate classes using classpath: ${project.build.outputDirector}" />
                    
                    <property name="project.testClassesDir" value="etc/test/classes" />
                    <property name="project.testCpDir" value="target/classes" />		
                    <property name="project.testSrcDir" value="etc/test/src" />		
                    <property name="project.testLibDir" value="etc/test/lib" />		
                    
                    <mkdir dir="${project.testClassesDir}" />
                    <mkdir dir="${project.testLibDir}" />
                    <delete includeEmptyDirs="true">
                        <fileset dir="${project.testClassesDir}" includes="**/*" />      	
                    </delete>
    
                    
                    <javac destdir="${project.testClassesDir}" fork="false" debug="true" excludes="**.svn/**">
                        <src path="${project.testSrcDir}" />
                        <classpath>
                          <pathelement location="${project.testCpDir}" />
                        </classpath>
                    </javac>  	
                    <copy todir="${project.testClassesDir}/test">
                        <fileset dir="${project.testSrcDir}/test" excludes="**/*.java" />
                    </copy>  	
                    <jar jarfile="${project.testLibDir}/classes.jar">
                       <fileset dir="${project.testClassesDir}">
                         <exclude name="test/JarClass2*" />
                       </fileset>
                    </jar>
                    <jar jarfile="${project.testLibDir}/classes2.jar">
                      <fileset dir="${project.testClassesDir}">
                       <include name="test/JarClass2*" />
                      </fileset>
                    </jar>  	
                    <delete>
                      <fileset dir="${project.testClassesDir}" includes="test/JarClass*" />  		
                    </delete>
                    
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

    </plugins>

  </build>
</project>
