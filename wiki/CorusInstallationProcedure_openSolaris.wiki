#summary Corus Installation Procedure for openSolaris

= Introduction =

This page will guide you through the necessary steps to install Corus on openSolaris 09.06 (x86 architecture).


= 1. Preparing the environment =

== i) Java ==
 * Before installing Corus you need to have Java installed on your machine. Corus requires at least Java 5.
 * Corus requires the presence of the `$JAVA_HOME` environment variable that points to the Java runtime you want to use (JRE or JDK).

== ii) Corus user ==
 * Since Corus is mainly a background process, we strongly suggest that the Corus server is installed and executed with privileges of a restricted user.
 * Using the command `useradd`, created a new system user named "corus". Here's a quick example of it:

 ||`root@cygnus-opensolaris:~# useradd -m -d /export/home/corus -s /bin/bash corus `<br />` root@cygnus-opensolaris:~# `||

== iii) Installation directory ==
 * You need to create a directory on your system in which you will install Corus.
 * For the purpose of this demonstration, we create the `/opt/sapia-corus` directory.
 ||` root@cygnus-opensolaris:~#  mkdir /opt/sapia-corus`<br />` root@cygnus-opensolaris:~# `||


= 2. Extract the corus distribution =
 * Extract the Corus distribution file into the Corus installation directory created above.
 ||` root@cygnus-opensolaris:/opt/sapia-corus# tar -xvf ../datastore/sapia_corus_server-2.0-solaris32-x86.tar.gz `<br />` root@cygnus-opensolaris:/opt/sapia-corus# `||

 * Rename the created root directory of the archive if you need.
 * For example, we extracted the tar and the files reside under the directory `/opt/sapia-corus/sapia_corus-2.0`
 * Make sure that the files of the distribution are own by the corus user. Here's an example using the `chown` command:
 ||` root@cygnus-opensolaris:/opt/sapia-corus# chown -R corus:corus sapia_corus-2.0/ `<br />` root@cygnus-opensolaris:/opt/sapia-corus# `||


= 3. Configure environment =
 * To run properly, Corus requires the presence of another environment variable: CORUS_HOME
 * The variable must point to the home directory of the Corus installation, which in our case is the `/opt/sapia-corus/sapia_corus-2.0` directory
 * However, we suggest the usage of a `current` symbolic link under `/opt/sapia-corus` to facilitate the future upgrades of Corus. That way if you ever extract another distribution of Corus you will simply have to change the symbolic link and upon restart the new distribution will start.
 * Here an example of how to create a symbolic link using the `ln` command (make sure you are in the install direcotry):

 || `root@cygnus-opensolaris:/opt/sapia-corus# pwd`<br />`/opt/sapia-corus`<br /><br /> `root@cygnus-opensolaris:/opt/sapia-corus# ln -s sapia_corus-2.0/ current`<br /><br />`root@cygnus-opensolaris:/opt/sapia-corus# ls -latr`<br />`total 12`<br />`drwxr-xr-x. 5 root   root      4096 Nov 24 22:29 ..`<br />`drwxr-xr-x. 6 corus corus 4096 Nov 26 06:15 sapia_corus-2.0`<br />`lrwxrwxrwx. 1 root   root        16 Nov 26 06:54 current -> sapia_corus-2.0/`<br />`drwxr-xr-x. 3 root   root      4096 Nov 26 06:54 .`<br />`root@cygnus-opensolaris:/opt/sapia-corus# ` ||

 * To define an environment variable on openSolaris, we suggest to modify the file `/etc/profile` which contains the global environment variables for the system.
 * Using `vi` (or the file editor of your choice) add the following line to the file:
 ||` export CORUS_HOME=/opt/sapia-corus/current `<br />||

 * You can also modify the `$PATH` environment variable to have an easy access to the various commands of the Corus distribution
 * To do so, edit the `/etc/profile` file again and add the following line to it:
 || ` export PATH=$PATH:$CORUS_HOME/bin`<br /> ||

At this point you should be able to start Corus by manually invoking the `$CORUS_HOME/bin/corus` script. However performing this task manually is cumbersome. The next section will guide you through the steps to register Corus as a service with Solaris' Service Management Facility feature.


= 4. Soalris system service integration with SMF = 
With the installation of Corus as a system service (using the Service Management Facility feature), you will be able to automatically start Corus on startup of your machine. Once properly registered and configured, SMF takes care of starting Corus when your system starts. You can also stop, start and restart the Corus service using the `svcadm` command.

To register Corus as a system service, you need to:
== i) Define a Corus configuration file ==
 * you need to define a Corus configuration file that will be used when the Corus service starts.
 * We provide a default configuration file to help you: it is located under `$CORUS_HOME/config/corus_service_33000.wrapper.properties`. You can have a look at the configuration section to know how to customize Corus.

== ii) Prepare SMF manifest ==
 * A file is available to configure Corus with SMF: it located under `$CORUS_HOME/config/corus.smf.xml`
 * You need to edit the file and set the proper value for the CORUS_HOME environment variable . You also need to update the path to the `corus-smf.sh` script in each `exec_method` element.
 * By default, the file is configured to start Corus using the `$CORUS_HOME/config/corus_service_33000.wrapper.properties` configuration file (so you can have a try right now).

== iii) Import the SMF manifest ==
 * To register Corus with SMF, you need to import the manifest file using the `svccfg` command
 * Here an example of how to import the file provided:
 || `root@cygnus-opensolaris:~# svccfg import /opt/sapia-corus/current/config/corus.smf.xml ` <br /> ||


== iv) Enable the Corus service  ==
 * Now that Corus is registered, you can use the `svcadm` command to enable the service:
 || `root@cygnus-opensolaris:~# scvadm enable svc:/application/sapia/corus ` <br /> ||

 * Corus should now be running and you can monitor it's state with the `svcs` command:
 || `root@cygnus-opensolaris:~# svcs -x corus ` <br /> ` svc:/application/sapia/corus:default (Sapia Corus Server)
 State: online since Tue Dec 07 22:11:58 2010 ` <br /> `  See: http://www.sapia-oss.org/projects/corus/
   See: /var/svc/log/application-sapia-corus:default.log ` <br /> ` Impact: None. ` <br /> ` root@cygnus-opensolaris:~# ` ||


Once you start the Corus service, you can validate the proper execution of the Corus service by: 

1. looking at the Corus log files that resides under the `$CORUS_HOME/logs` directory

2. starting the Corus CLI (Command Line Interface) to connect to the server. The script is called `coruscli` and resides under the `$CORUS_HOME/bin` directory. If you previously added the `$CORUS_HOME/bin` directory in the `$PATH` environment variable, you can simply invoke the script. Otherwise you will have to get to the bin directory and invoke the command.

<table boder="0" width="50%">
<tr><td>
<a href="http://sapia.googlecode.com/svn/wiki/resources/ScreenShot_openSolaris_CorusCLI.jpg"><img width="100%" src="http://sapia.googlecode.com/svn/wiki/resources/ScreenShot_openSolaris_CorusCLI.jpg" /></a>
</td></tr>
<tr align="center"><td>_Click on the image for full size resolution_</td></tr>
</table>

And that is pretty much it for the installation. You can now envoy Corus. 

== iv) Manage Corus system service ==
 * You can use the `svcadm` command to stop, start or restart Corus

 || `root@cygnus-opensolaris:~# initctl start corus ` <br /> `corus start/running` <br /> `root@cygnus-opensolaris:~# ` <br /><br /> `root@cygnus-opensolaris:~# initctl restart corus` <br /> `corus start/running` <br /> `root@cygnus-opensolaris:~# ` <br /><br /> `root@cygnus-opensolaris:~# initctl stop corus` <br /> `corus stop/waiting` <br /> `root@cygnus-opensolaris:~#  ` ||

 * If you ever need to remove the Corus system service, you simply have to remove the `corus.conf` configuration file from `/etc/init/` directory and upstart will take care of the rest (make sure you stop corus first)
 
 || `root@cygnus-opensolaris:~# initctl stop corus ` <br /> `corus stop/waiting` <br /><br /> `root@cygnus-opensolaris:~# rm /etc/init/corus.conf` <br /><br /> `root@cygnus-opensolaris:~# initctl status corus` <br /> `initctl: Unknown job: corus` ||